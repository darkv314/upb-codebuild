
openapi: 3.0.0

paths:
  /movies/{movie-id}:
    get:
      summary: This endpoint returns a the movie information
      parameters:
        - name: movieId
          in: path
          required: true
          description: movie ID
        - in: query
          name: date
          schema:
            type: string
          description: The dates settled for the movie
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getMovieInfo/invocations"
        httpMethod: "POST"
    put:
      summary: This endpoint saves a movie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movie_id:
                  type: string
                title:
                  type: string
                main_actor:
                  type: string
                year:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putMovieInfo/invocations"
        httpMethod: "POST"
        
  /movies/{movie-id}/cinemas/{cinema-id}:
    get:
      summary: This endpoint returns the people that will attend the movie in a specific cinema room
      parameters:
        - name: movieCID
          in: path
          required: true
          description: movie CID
        - name: cinemaId
          in: path
          required: true
          description: cinema ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getMoviePeople/invocations"
        httpMethod: "POST"
    put:
      summary: This endpoint saves a movie and a cinema record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movie_id_cinema_id:
                  type: string
                name:
                  type: string
                ci:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putPeopleOnMovie/invocations"
        httpMethod: "POST"
        
  /cinemas/{cinema-id}:
    get:
      summary: This endpoint returns a cinema information
      parameters:
        - name: cinemaId
          in: path
          required: true
          description: cinema ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCinemaInfo/invocations"
        httpMethod: "POST"
    put:
      summary: This endpoint saves a cinema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cinema_id:
                  type: string
                n_seats:
                  type: string
                has_3d:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putCinemaInfo/invocations"
        httpMethod: "POST"
        
  /personas/{persona-id}:
    get:
      summary: This endpoint returns a person information
      parameters:
        - name: personaId
          in: path
          required: true
          description: persona ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getPersonInfo/invocations"
        httpMethod: "POST"
    put:
      summary: This endpoint saves a person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                person_id:
                  type: string
                movie_name:
                  type: string
                date:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putPersonInfo/invocations"
        httpMethod: "POST"
    
    